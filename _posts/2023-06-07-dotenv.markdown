---
layout: post
title:  "dotenv is necessary? or unnecessary?"
date:   2023-06-07
categories: dotenv
---
(english)

'dotenv' has the strength to control all the environment variables of a project.
It is located in the root folder and doesn't depend on the programming language used.
It is usually used on Local and is unnecessary on cloud service like AWS. 

For example, in AWS Lambda, you can set keys and values in the Configuration environment list. The cloud provider secures my secret values.

So, why people use dotenv on Local?
If you set environment variables using `.json` in Express, you have to set and get keys and values. Additionally if you want to use them in a function, you have to set the values using `req.app.get`. 
Nobody wants to do boring work. This is why people use dotenv. 
Moreover, you can edit keys or values in the terminal.

Warning: MAKE SURE TO ADD `.env` TO `.gitignore`

-----
(korean)

dotenv는 루트 폴더에 위치시켜 해당 프로젝트의 모든 환경변수를 통제할 수 있다는 장점이 있다.
그리고 어떤 언어에 상관없이 사용이 가능하다. 
dotenv는 로컬 환경에서 중요한 값을 숨기고자할 때 사용되는데, AWS와 같은 클라우드 서비스에서는 
dotenv를 사용할 필요가없다. 예를 들어 AWS Lambda에 들어가서 Configuration 항목을 보면 enviroment의 key, value값을 등록할 수 있다. 그 곳에 나의 중요한 정보를 등록하면 클라우드 측에서 보안처리를 해준다.

그렇다면 dotenv를 사용하는 이유가 뭘까?
예를들어 .json을 이용하여 환경설정을 한다고 가정해보자. 
express를 이용하고자 할 때, set, get 작업을 통해 값을 설정하고 불러와야한다. 
더구나 함수에서 사용하려면 req.app.get을 이용해 값을 또 불러와줘야한다.
이렇게 매번 데이터를 불러오고 사용하는 과정이 반복되는 일이 필요하다면, 반복하지 않아도 되는 dotenv를 사용할 이유는 충분해진다. 더구나 dotenv는 terminal을 이용해 값을 수정할 수도 있다.

주의할 점은 .gitignore에 꼭 추가시켜놓는 것이다.

[reference link](https://parkgang.github.io/blog/2020/10/10/why-env-var-in-dotenv-files-used/)
